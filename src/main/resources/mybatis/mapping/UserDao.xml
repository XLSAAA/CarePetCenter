<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.moquan.dao.UserDao">

    <!--
        private int id;
        private String name;
        private String username;
        private String password;
        private String category;
        private int errorCount;
        private String freezeTime;
        private int status;
        private String message;
    -->

    <resultMap type="cn.moquan.bean.user.User" id="user">
        <id column="user_id" property="id" />
        <result column="name" property="name"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="category" property="category"/>
        <result column="error_count" property="errorCount"/>
        <result column="freeze_time" property="freezeTime"/>
        <result column="status" property="status"/>
    </resultMap>


    <!--

        // 查询

        // 查询所有的 User
        List<User> getAllUser();

        User getUserById(int id);

        User login(String username);

        // 添加

        int insertUser(User user);

        // 删除

        int deleteUserById(int id);

        // 更改

        int updateUserById(User user);

        int updateUserErrorCountById(@Param("userId") int userId, @Param("count") int count);

        int updateUserStatusById(int userId, int status);

        int updateUserUnfreezeById(@Param("userId") int userId, @Param("status") int status);

        int updateUserFreezeById(@Param("userId") int userId, @Param("status") int status);

        int updateDefaultPasswordById(@Param("id") int id, @Param("defaultPassword") String defaultPassword);
    -->


    <!--
        List<User> getAllUser();
    -->
    <select id="getAllUser" resultMap="user">
        select * from user
    </select>

    <!--
        User getUserById(int id);
    -->
    <select id="getUserById" resultMap="user">
        select * from user where user_id = #{id}
    </select>


    <!--
        User login(String username);
    -->
    <select id="login" resultMap="user">
        select * from user where username = #{username}
    </select>

    <!--
        int insertUser(User user);
    -->
    <insert id="insertUser">
        insert into
        user    (name, username, password, category, error_count, freeze_time, status)
        values  (#{name}, #{username}, #{password}, #{category}, 0, now(), 0)
    </insert>

    <!--
        int deleteUserById(int id);
    -->
    <delete id="deleteUserById">
        update user
        set status = 3
        where user_id = #{id}
    </delete>

    <!--

        int updateUserById(User user);

        int updateUserErrorCountById(@Param("userId") int userId, @Param("count") int count);

        int updateUserStatusById(int userId, int status);

        int updateUserUnfreezeById(@Param("userId") int userId, @Param("status") int status);

        int updateUserFreezeById(@Param("userId") int userId, @Param("status") int status);

        int updateDefaultPasswordById(@Param("id") int id, @Param("defaultPassword") String defaultPassword);


    -->

    <!--
        int updateUserById(User user);
    -->

    <update id="updateUserById">
        update user
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="password != null">password = #{password},</if>
            <if test="category != null">category = #{category},</if>
            <if test="errorCount != null">error_count = #{errorCount},</if>
            <if test="status != null">status = #{status}</if>
        </set>
        where user_id = #{id}
    </update>

    <!--
        int updateUserErrorCountById(@Param("userId") int userId, @Param("count") int count);
    -->
    <update id="updateUserErrorCountById">
        update user
        set error_count = #{count}
        where user_id = #{userId}
    </update>

    <!--
            int updateUserUnfreezeById(@Param("userId") int userId, @Param("status") int status);
    -->

    <update id="updateUserUnfreezeById">
        update user
        set error_count = 0, status = #{status}, freeze_time = now()
        where user_id = #{userId}
    </update>

    <!--
        int updateUserFreezeById(@Param("userId") int userId, @Param("status") int status);
    -->
    <update id="updateUserFreezeById">
        update user
        set status = #{status}, freeze_time = date_add(now(), interval 1 day)
        where user_id = #{userId}
    </update>

    <!--
        int updateDefaultPasswordById(@Param("id") int id, @Param("defaultPassword") String defaultPassword);
    -->
    <update id="updateDefaultPasswordById">
        update user
        set password = #{defaultPassword}
        where user_id = #{id}
    </update>


</mapper>